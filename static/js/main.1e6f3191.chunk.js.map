{"version":3,"sources":["Home.js","Nav.js","Login.js","Register.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","config","headers","Authorization","localStorage","getItem","axios","get","then","res","console","log","err","Component","Nav","className","to","Login","handleSubmit","e","preventDefault","data","email","password","post","setItem","token","catch","onSubmit","this","type","placeholder","onChange","target","value","Register","first_name","firstName","last_name","lastName","confirm_password","confirmpassword","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"wTAoCeA,E,4MA9BXC,MAAO,G,kEAKH,IAAMC,EAAQ,CACVC,QAAQ,CACJC,cAAe,UAAYC,aAAaC,QAAQ,WAMxDC,IAAMC,IAAI,OAAON,GAAQO,MACrB,SAAAC,GACIC,QAAQC,IAAIF,MAEhB,SAAAG,GACIF,QAAQC,IAAIC,Q,+BAOpB,OACI,yD,GA5BOC,aCyBJC,E,kDAzBX,aAAc,wC,qDAIV,OACI,yBAAKC,UAAU,+CACf,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAI,KAAnC,QACA,yBAAKD,UAAU,4BACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAI,UAA/B,UAEF,wBAAID,UAAU,aACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAI,aAA/B,oB,GAfFH,aC2CHI,E,4MAxCXC,aAAa,SAACC,GACVA,EAAEC,iBAEF,IAAMC,EAAK,CACPC,MAAM,EAAKA,MACXC,SAAS,EAAKA,UAElBjB,IAAMkB,KAAK,8BAA8BH,GAAMb,MAAK,SAAAC,GAChDL,aAAaqB,QAAQ,QAAQhB,EAAIY,KAAKK,UACvCC,OAAM,SAAAf,GACLF,QAAQC,IAAIC,O,uDAKX,IAAD,OACJ,OACI,0BAAMgB,SAAUC,KAAKX,cACrB,qCAGA,yBAAKH,UAAU,cACX,wCACA,2BAAOe,KAAK,QAAQf,UAAU,eAAegB,YAAY,mBACzDC,SAAU,SAAAb,GAAC,OAAE,EAAKG,MAAOH,EAAEc,OAAOC,UAGtC,yBAAKnB,UAAU,cACX,2CACA,2BAAOe,KAAK,WAAWf,UAAU,eAAegB,YAAY,WAC5DC,SAAU,SAAAb,GAAC,OAAE,EAAKI,SAAUJ,EAAEc,OAAOC,UAIzC,4BAAQnB,UAAU,6BAAlB,c,GArCQF,aCoELsB,E,4MAjEXjB,aAAa,SAACC,GACVA,EAAEC,iBACF,IAAMC,EAAM,CACRe,WAAY,EAAKC,UACjBC,UAAW,EAAKC,SAChBjB,MAAO,EAAKA,MACZC,SAAU,EAAKA,SACfiB,iBAAkB,EAAKC,iBAE3B/B,QAAQC,IAAIU,GACZf,IAAMkB,KAAK,iCAAiCH,GAAMb,MAC9C,SAAAC,GACIC,QAAQC,IAAIF,MAGlBkB,OACE,SAAAf,GACIF,QAAQC,IAAIC,O,uDAOf,IAAD,OACJ,OACI,0BAAMgB,SAAUC,KAAKX,cACjB,uCAEA,yBAAKH,UAAU,cACX,6CACA,2BAAOe,KAAK,OAAOf,UAAU,eAAegB,YAAY,aACxDC,SAAU,SAAAb,GAAC,OAAE,EAAKkB,UAAWlB,EAAEc,OAAOC,UAG1C,yBAAKnB,UAAU,cACX,4CACA,2BAAOe,KAAK,OAAOf,UAAU,eAAegB,YAAY,YACxDC,SAAU,SAAAb,GAAC,OAAE,EAAKoB,SAAUpB,EAAEc,OAAOC,UAGzC,yBAAKnB,UAAU,cACX,wCACA,2BAAOe,KAAK,QAAQf,UAAU,eAAegB,YAAY,mBACzDC,SAAU,SAAAb,GAAC,OAAE,EAAKG,MAAOH,EAAEc,OAAOC,UAGtC,yBAAKnB,UAAU,cACX,2CACA,2BAAOe,KAAK,WAAWf,UAAU,eAAegB,YAAY,WAC5DC,SAAU,SAAAb,GAAC,OAAE,EAAKI,SAAUJ,EAAEc,OAAOC,UAGzC,yBAAKnB,UAAU,cACX,mDACA,2BAAOe,KAAK,WAAWf,UAAU,eAAegB,YAAY,mBAC5DC,SAAU,SAAAb,GAAC,OAAE,EAAKsB,gBAAiBtB,EAAEc,OAAOC,UAGhD,4BAAQnB,UAAU,6BAAlB,gB,GA9DOF,aC6BR6B,MArBf,WACE,OACE,kBAAC,IAAD,KACA,yBAAK3B,UAAU,OACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAQA,KAAK,UAAS,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAQA,KAAK,aAAY,kBAAC,EAAD,aCVjBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdhC,OAAM,SAAAiC,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.1e6f3191.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React,{Component} from 'react';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state ={\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const config ={\r\n            headers:{\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n\r\n\r\n        axios.get('http',config).then(\r\n            res=>{\r\n                console.log(res);\r\n            },\r\n            err=>{\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <h2>You are not logged in</h2>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand navbar-light fixed-top\">\r\n            <div className=\"container\">\r\n              <Link className=\"navbar-brand\" to={'/'}>Home</Link>\r\n              <div className=\"collapse navbar-collapse\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-items\">\r\n                    <Link className=\"nav-link\" to={'/Login'}>Login</Link>\r\n                  </li>\r\n                  <li className=\"nav-items\">\r\n                    <Link className=\"nav-link\" to={'/Register'}>Sign up</Link>\r\n                  </li>\r\n                </ul>\r\n    \r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Nav;","import axios from 'axios';\r\nimport React,{Component} from 'react';\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const data={\r\n            email:this.email,\r\n            password:this.password\r\n        }\r\n        axios.post('http://localhost:8000/login',data).then(res=>{\r\n            localStorage.setItem('token',res.data.token);\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n            <h3>Login</h3>\r\n\r\n           \r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"abcd@examble.com\"\r\n                onChange={e=>this.email= e.target.value}/>\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                onChange={e=>this.password= e.target.value}/>\r\n\r\n            </div>\r\n\r\n            <button className=\"btn btn-primary btn-block\">Login</button>\r\n\r\n        </form>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import axios from 'axios';\r\nimport React,{Component} from 'react';\r\n\r\nclass Register extends Component {\r\n\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const data ={\r\n            first_name: this.firstName,\r\n            last_name: this.lastName,\r\n            email: this.email,\r\n            password: this.password,\r\n            confirm_password: this.confirmpassword\r\n        };\r\n        console.log(data);\r\n        axios.post('http://localhost:8000/register',data).then(\r\n            res=>{\r\n                console.log(res)\r\n            }\r\n\r\n        ).catch(\r\n            err =>{\r\n                console.log(err);\r\n            }\r\n        )\r\n\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First Name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First Name\"\r\n                    onChange={e=>this.firstName= e.target.value}/>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Last Name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\"\r\n                    onChange={e=>this.lastName= e.target.value}/>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"abcd@examble.com\"\r\n                    onChange={e=>this.email= e.target.value}/>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                    onChange={e=>this.password= e.target.value}/>\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\"\r\n                    onChange={e=>this.confirmpassword= e.target.value}/>\r\n\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Register;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Home from './Home';\nimport Nav from './Nav';\nimport Login from './Login';\nimport Register from './Register';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Nav/>\n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            <Route exact path=\"/\"><Home/></Route>\n            <Route  path=\"/Login\"><Login/></Route>\n            <Route  path=\"/Register\"><Register/></Route>\n          </Switch>\n        </div>\n      </div>\n\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}